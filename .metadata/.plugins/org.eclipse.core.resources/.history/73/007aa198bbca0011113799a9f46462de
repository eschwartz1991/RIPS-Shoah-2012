/**
 * @(#)KeywordSearch.java
 *
 *
 * @Christie Quaranta 
 * @version 1.00 2012/6/29
 */


/*import java.io.File;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.List;*/
import java.io.*;
import java.util.*;
import java.lang.*;

import org.apache.lucene.document.Field;
import org.apache.lucene.document.Document;

//import org.apache.lucene.queryParser.ParseException;
import org.apache.lucene.queryParser.*;

import org.apache.lucene.analysis.standard.StandardAnalyzer;

/*import org.apache.lucene.index.IndexReader;
import org.apache.lucene.index.IndexWriter;
import org.apache.lucene.index.IndexWriterConfig;
import org.apache.lucene.index.Term;*/
import org.apache.lucene.index.*;

import org.apache.lucene.search.*;

//import org.apache.lucene.store.FSDirectory;
import org.apache.lucene.store.*;

//import org.apache.lucene.util.Version;
import org.apache.lucene.util.*;

public class KeywordSearch {
	//location where the index will be stored
	private static final String INDEX_DIR = "keywordList";
	private static final int DEFAULT_RESULT_SIZE = 100000;
    static String term = null;
    static String queryNum = null;
	public static File file2 = new File("English.csv");   // Elena: this produces errors on my computer
        
    public static void main(String[] args) throws IOException, ParseException {
        //file2.delete();  // Elena: why is this needed?
        
        //import text file
        File file = new File("/home/lena/Documents/CS_Projects/RIPS-Shoah-2012/LuceneXML/src/english_thesaurus.txt");
        FileReader fileReader = new FileReader(file);
        BufferedReader bufferedReader = new BufferedReader(fileReader);
    	//System.out.println("I'm here!");
       // Scanner scan = new Scanner(file);
    //	System.out.println(scan.hasNext());

        List<IndexItem> toBeIndex = new ArrayList<IndexItem>();
        while (line = bufferedReader.readLine()) != null){
        	//String line = scan.nextLine();
        	System.out.println(line);

        	String [] parts = line.split("\\t");
        	boolean continue0 = true;
        	do{
        		try{
		        	if (parts.length >= 3){
			        	String tID = parts[0];
			        	//System.out.println(tID);
			        	String lab = parts[1];
			            //System.out.println(lab);
			        	String sLab = parts[2];
			        	//System.out.println(sLab);
			        	toBeIndex.add(new IndexItem(tID, lab, sLab));
		        	}
		        	else{
		        		System.out.println("It broke here.");
		        		System.out.println("LINE: " + line);
		        		System.out.println("PARTS: ");
		        		Arrays.toString(parts);
		        	}
		        	continue0 = false;
	        	}
	        	catch (InputMismatchException ex){
	        		scan.nextLine();
	        	}
        	}while(continue0);
        }
        //items to be indexed
        IndexItem[] indexItems = toBeIndex.toArray(new IndexItem[toBeIndex.size()]);
        
        //creating indexer and indexing the items
        Indexer indexer = new Indexer(INDEX_DIR);
        for (IndexItem indexItem : indexItems){
        	indexer.index(indexItem);
        }
        //close the index
        indexer.close();
        
        //creating the searcher to same location as the indexer
        Searcher searcher = new Searcher(INDEX_DIR);
        
        //import queries file
        File file1 = new File("/home/lena/Dropbox/RIPS-Shoah/keyword search/queries.txt");
        Scanner newScan = new Scanner(file1);
        String [] query = new String [228];
        PrintWriter output = new PrintWriter(new FileWriter(file2, true));

        for (int k = 0; k < 228; k++){   // for each query, input into Lucene and search
        	query[k] = newScan.nextLine();
        	String [] parts1 = query[k].split("\\t");  // split the query into query number and query word
        //	System.out.println(query[k].split("\\t")[1]);  // prints the query searched

        	
        	queryNum = parts1[0];
        	//System.out.println(queryNum);
        	term = parts1[1];
        	//System.out.println(findMe);

        	List<IndexItem> result = null;
			try {
				result = searcher.findBySearchLabel(term, DEFAULT_RESULT_SIZE);  // this line doesn't work
	        	//System.out.println(result.get(0));

			} catch (java.text.ParseException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
        	print(output, result);
        }
        System.out.println("Your file has been saved.");
        
        //Scanner input = new Scanner(System.in);
        //System.out.println("Type Q/q to quit.");
        //System.out.println("Type 1 to query by termID.");
        //System.out.println("Type 2 to query by Label.");
        //System.out.println("Type 3 to query by Search Label.");
        
        /*do{
        	System.out.print("Enter input: ");
        	String queryType = input.nextLine();
        	
        	if (queryType.equalsIgnoreCase("q")){
        		break;
        	}
        	//search by termID
        	if (queryType.equals("1")){
        		System.out.print("Enter termID to search: ");
        		String queryTermID = input.nextLine();
        		List<IndexItem> result = searcher.findByTermID(queryTermID, DEFAULT_RESULT_SIZE);
        		print(result);
        	}
        	//search by label
        	else if (queryType.equals("2")){
        		System.out.print("Enter Label to search: ");
        		String queryLabel = input.nextLine();
        		List<IndexItem> result = searcher.findByLabel(queryLabel, DEFAULT_RESULT_SIZE);
        		print(result);
        	}
        	//search by search label
        	else if (queryType.equals("3")){
        		System.out.print("Enter Search Label to search: ");
        		String querySearchLabel = input.nextLine();
        		List<IndexItem> result = searcher.findBySearchLabel(querySearchLabel, DEFAULT_RESULT_SIZE);
        		print(result);
        	}

        }while (true);*/
        searcher.close();
    }
    //print results
    private static void print(PrintWriter output, List<IndexItem> result) throws FileNotFoundException, IOException {
    	//System.out.println("Result Size: " + result.size());
    	
    	//for (IndexItem item : result) {
    		for (int m = 0; m < result.size(); m++){
    		//File file2 = new File("English.csv");
    		//PrintWriter output = new PrintWriter(new FileWriter(file2, true));
			//output.flush();
				String result1 = (result.get(m)).toString();
				String printMe = (((queryNum.concat(",")).concat(result1)).concat(",")).concat(term);
				if ((!(result.get(m + 1).equals(result.get(m)))) && (m + 1 <= result.size())){
					output.println(printMe);
				}
				
    		}
    	
    }
}
